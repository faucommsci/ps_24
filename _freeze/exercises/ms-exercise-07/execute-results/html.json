{
  "hash": "ef1ca1a8950ad4a49510ef63912a0fde",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"API mining and data wrangling with R\"\nsubtitle: \"Session 07 - Exercise\"\ndate: last-modified\ndate-format: \"DD.MM.YYYY\"\nexecute: \n  eval: false\n---\n\n\n::: {.callout-tip icon=\"false\"}\n[![Quarto Document](https://raw.githubusercontent.com/faucommsci/teaching_materials/main/images/badges/badge-quarto_document.svg)](https://github.com/faucommsci/ps_24/blob/main/exercises/ms-exercise-07.qmd) Link to source file\n:::\n\n::: callout-note\n## Ziel der Anwendung: Textanalyse in R kennenlernen\n\n-   In folgenden √úbungsaufgaben dienen dazu, die Datengrundlage f√ºr die in den n√§chsten Sitzungen anstehende(n) Textanalyse(n) weiter inhaltlich plausibel einzugrenzen bzw. zu pr√§zisieren.\n\n-   Finales Ziel ist die Erstellung eines Code-Chunks, mit dessen Hilfe der Datensatz review_subsample erstellt werden soll. Bitte arbeitet die √úbung durch, wir besprechen zu Anfang der n√§chsten Sitzung dann eure Vorschl√§ge.\n:::\n\n## Background\n\n::: callout-tip\n## Todays's data basis: [OpenAlex](https://openalex.org/)\n\nOpenAlex is a free and open catalog of the global research system. It's named after the ancient Library of Alexandria and made by the nonprofit OurResearch.\n:::\n\n![](https://help.openalex.org/~gitbook/image?url=https%3A%2F%2F3117786224-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252Fa3BRxfacarwiv3wTnHuB%252Fuploads%252FHk254kXRAMOIXVCYDDT9%252Fopenalex-overview-diagram.png%3Falt%3Dmedia%26token%3D133a87f6-6435-47c8-a272-0b108576e36a&width=768&dpr=1&quality=100&sign=4876c8bb81a37dece37cdee19427efddbfa9d6d6337a2ca8a03524c0c8791982){fig-align=\"center\"}\n\n> *At the heart of OpenAlex is our dataset‚Äîa catalog of [works](https://help.openalex.org/how-it-works/works). A work is any sort of scholarly output. A research article is one kind of work, but there are others such as datasets, books, and dissertations. We keep track of these works‚Äîtheir titles (and abstracts and full text in many cases), when they were created, etc. But that's not all we do. We also keep track of the connections between these works, finding associations through things like [journals](https://help.openalex.org/how-it-works/sources), [authors](https://help.openalex.org/how-it-works/authors), [institutional affiliations](https://help.openalex.org/how-it-works/institutions), citations, [topics](https://help.openalex.org/how-it-works/topics), and [funders](https://help.openalex.org/how-it-works/funders). There are hundreds of millions of works out there, and tens of thousands more being created every day, so it's important that we have these relationships to help us make sense of research at a large scale.*\n\n## Preparation\n\n::: callout-important\n## Wichtige Information\n\n-   Bitte stellen Sie sicher, dass Sie das jeweilige R-Studio Projekt zur √úbung ge√∂ffnet haben. Nur so funktionieren alle Dependencies korrekt.\n-   Um den einwandfreien Ablauf der √úbung zu gew√§hrleisten, wird f√ºr die Aufgaben auf eine eigenst√§ndige Datenerhebung verzichtet und ein √úbungsdatensatz zu verf√ºgung gestelt.\n:::\n\n### Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  here, qs, # file management\n  magrittr, janitor, # data wrangling\n  easystats, sjmisc, # data analysis\n  ggpubr, # visualization\n  openalexR, \n  tidyverse # load last to avoid masking issues\n  )\n```\n:::\n\n\n### Import und Vorverarbeitung der Daten\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import from local\nreview_works <- qs::qread(here(\"data/exercise-07/openalex-review_works-2013_2023.qs\"))\n\n# Create correct data\nreview_works_correct <- review_works %>% \n    mutate(\n        # Create additional factor variables\n        publication_year_fct = as.factor(publication_year), \n        type_fct = as.factor(type)\n        )\n```\n:::\n\n\n## üõ†Ô∏è Praktische Anwendung\n\n::: callout-important\n## Achtung, bitte lesen!\n\n-   Bevor Sie mit der Arbeit an den folgenden üìã **Exercises** beginnen, stellen Sie bitte sicher, dass Sie alle Chunks des Abschnitts [Preparation] gerendert haben. Das k√∂nnen Sie tun, indem Sie den \"*Run all chunks above*\"-Knopf ![](/img/rstudio-button-render_all_chunks_above.png)des n√§chsten Chunks benutzen.\n-   Bei Fragen zum Code lohnt sich ein Blick in den **Showcase** (.qmd oder .html). Beim Showcase handelt es sich um eine kompakte Darstellung des in der Pr√§sentation verwenden R-Codes. Sie k√∂nnen das Showcase also nutzen, um sich die Code-Bausteine anzusehen, die f√ºr die R-Outputs auf den Slides benutzt wurden.\n:::\n\n### üìã Exercise 1: Sprache der Publikationen\n\n::: callout-note\n## Ziel der Aufgabe\n\n-   Identifizieren Sie die f√ºr die Untersuchung relevanten Artikel auf Basis von deren Sprache (`language`)\n-   Hintergrundinformation zur [Variable `language`](https://docs.openalex.org/api-entities/works/work-object#language) finden Sie in der API-Dokumentation von OpenAlex.\n:::\n\n-   Nutzen Sie die Funktion `sjmisc::frq()` und schauen Sie sich im Datensatz `review_works_correct` die Variablen `language` an. Verwenden Sie das Argument `sort.frq = \"desc\"`, um die H√§ufigkeit der Sprachen absteigend zu sortieren.\n-   Notieren Sie sich den jeweilgen [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes), um Ihn sp√§ter bei [üìã Exercise 4: Erstellung Subsample] als Filter zu nutzen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create frequency table for the variable language\n...\n```\n:::\n\n\n### üìã Exercise 2: Typ der Publikationen\n\n::: callout-note\n## Ziel der Aufgabe\n\n-   Identifizieren Sie die f√ºr die Untersuchung relevanten Artikel auf Basis deres Typen (`type`).\n-   Hintergrundinformation zur [Variable `type`](https://docs.openalex.org/api-entities/works/work-object#type) finden Sie in der API-Dokumentation von OpenAlex.\n:::\n\n-   Nutzen Sie die Funktion `sjmisc::frq()` und schauen Sie sich im Datensatz `review_works_correct` die Variablen `type` an. Verwenden Sie das Argument `sort.frq = \"desc\"`, um die Typen in Abh√§ngigkeit Ihrer H√§ufigkeit absteigend zu sortieren.\n-   Notieren Sie sich die Auspr√§gungen der Variable type, die aus Ihrer Sicht sp√§ter bei [üìã Exercise 4: Erstellung Subsample] als Filter genutzt werden soll.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create frequency table for the variable type\n...\n```\n:::\n\n\n### üìã Exercise 3: Forschungsfeld der Publikationen\n\n::: callout-note\n## Ziel der Aufgabe\n\n-   Identifizieren Sie die f√ºr die Untersuchung relevanten Artikel auf Basis des von OpenAlex dem Artikel zugeordnenten Foschungsfeldes (`field)`\n\n-   Hintergrundinformation zur [Variable `field`](https://docs.openalex.org/api-entities/topics/topic-object#field) finden Sie in der API-Dokumentation von OpenAlex.\n:::\n\n-   Basierend auf dem Datensatz `review_works_correct`\n    -   nutzen Sie die Funktion `unnest()` um die Variablen der `topics`-Liste zu extrahieren. Verwenden Sie dabei das Argument `names_sep = \"_\"`. um doppelte Variablennamen durch Hinzuf√ºgen des Prefixes `topics_` zu verhindern.\n    -   filtern Sie anschlie√üen mit Hilfe der Funktion `filter` und der Variable bzw. dem Argument `topics_name == \"field\"` nur die Informationen zum Forschungsfeld, sowie mit der Variable bzw. dem Argument `topics_i == \"1\"` nur die erste Zuordnung.\n    -   Nutzen Sie die Funktion `sjmisc::frq()` und schauen Sie sich die Variablen `topics_display_name` an. Verwenden Sie das Argument `sort.frq = \"desc\"`, um die Forschungsfelder in Abh√§ngigkeit Ihrer H√§ufigkeit absteigend zu sortieren.\n-   Notieren Sie sich die Auspr√§gungen der Variable topics_display_name, die aus Ihrer Sicht sp√§ter bei [üìã Exercise 4: Erstellung Subsample] als Filter genutzt werden soll.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unnest topis variable and create frequency table for the variable topics_display_name\n...\n```\n:::\n\n\n### üìã Exercise 4: Erstellung Subsample\n\n::: callout-note\n## Ziel der Aufgabe\n\n-   Erstellung sie den Datensatz `review_subsample`, in dem Sie mit Hilfe der Funktionen `select()` und/oder `filter()` das Datenmaterial weiter eingrenzen. Sie k√∂nnen sich sowohl auf die Variablen aus der √úbung, als auch auf die aus der Sitzung (bzw. den Slides) beziehen.\n-   Der Code dieses Chunks wird in der n√§chsten Sitzung ben√∂tigt bzw. besprochen, halten Sie diesen deshalb bitte bereit.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreview_subsample <- review_works_correct %>% \n    filter(...)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}